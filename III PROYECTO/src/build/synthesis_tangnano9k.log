
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)


-- Running command `read_verilog -sv ../design/bcd_to_bin.sv ../design/bin_to_bcd.sv ../design/booth_multiplier.sv ../design/debounce.sv ../design/display_mux.sv ../design/hex_to_7seg.sv ../design/keypad_scanner.sv ../design/mult.sv ../design/top.sv ; synth_gowin -top top -json teclado.json' --

1. Executing Verilog-2005 frontend: ../design/bcd_to_bin.sv
Parsing SystemVerilog input from `../design/bcd_to_bin.sv' to AST representation.
Generating RTLIL representation for module `\bcd_to_bin'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../design/bin_to_bcd.sv
Parsing SystemVerilog input from `../design/bin_to_bcd.sv' to AST representation.
Generating RTLIL representation for module `\bin_to_bcd'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../design/booth_multiplier.sv
Parsing SystemVerilog input from `../design/booth_multiplier.sv' to AST representation.
Generating RTLIL representation for module `\booth_multiplier'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../design/debounce.sv
Parsing SystemVerilog input from `../design/debounce.sv' to AST representation.
Generating RTLIL representation for module `\debounce'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../design/display_mux.sv
Parsing SystemVerilog input from `../design/display_mux.sv' to AST representation.
Generating RTLIL representation for module `\display_mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../design/hex_to_7seg.sv
Parsing SystemVerilog input from `../design/hex_to_7seg.sv' to AST representation.
Generating RTLIL representation for module `\hex_to_7seg'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../design/keypad_scanner.sv
Parsing SystemVerilog input from `../design/keypad_scanner.sv' to AST representation.
Generating RTLIL representation for module `\keypad_scanner'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../design/mult.sv
Parsing SystemVerilog input from `../design/mult.sv' to AST representation.
Generating RTLIL representation for module `\mult'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../design/top.sv
Parsing SystemVerilog input from `../design/top.sv' to AST representation.
Warning: Literal has a width of 8 bit, but value requires 12 bit. (../design/top.sv:157)
Warning: Literal has a width of 8 bit, but value requires 12 bit. (../design/top.sv:159)
Warning: Literal has a width of 8 bit, but value requires 12 bit. (../design/top.sv:163)
Warning: Literal has a width of 8 bit, but value requires 12 bit. (../design/top.sv:165)
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

10. Executing SYNTH_GOWIN pass.

10.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Successfully finished Verilog frontend.

10.2. Executing HIERARCHY pass (managing design hierarchy).

10.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \display_mux
Used module:         \hex_to_7seg
Used module:     \bin_to_bcd
Used module:     \booth_multiplier
Used module:     \bcd_to_bin
Used module:     \keypad_scanner
Used module:         \debounce
Parameter \N = 5

10.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\booth_multiplier'.
Parameter \N = 5
Generating RTLIL representation for module `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101'.

10.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \display_mux
Used module:         \hex_to_7seg
Used module:     \bin_to_bcd
Used module:     $paramod\booth_multiplier\N=s32'00000000000000000000000000000101
Used module:     \bcd_to_bin
Used module:     \keypad_scanner
Used module:         \debounce

10.2.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \display_mux
Used module:         \hex_to_7seg
Used module:     \bin_to_bcd
Used module:     $paramod\booth_multiplier\N=s32'00000000000000000000000000000101
Used module:     \bcd_to_bin
Used module:     \keypad_scanner
Used module:         \debounce
Removing unused module `\mult'.
Removing unused module `\booth_multiplier'.
Removed 2 unused modules.

10.3. Executing PROC pass (convert processes to netlists).

10.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$342'.
Cleaned up 1 empty switch.

10.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$336 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$332 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$330 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$328 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$326 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$324 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$316 in module DFFC.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$312 in module DFFP.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$310 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$308 in module DFFR.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$306 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$304 in module DFFS.
Marked 3 switch rules as full_case in process $proc$../design/top.sv:0$116 in module top.
Marked 1 switch rules as full_case in process $proc$../design/top.sv:131$105 in module top.
Marked 4 switch rules as full_case in process $proc$../design/top.sv:83$97 in module top.
Marked 2 switch rules as full_case in process $proc$../design/top.sv:0$94 in module top.
Marked 1 switch rules as full_case in process $proc$../design/top.sv:61$92 in module top.
Marked 1 switch rules as full_case in process $proc$../design/top.sv:42$88 in module top.
Marked 3 switch rules as full_case in process $proc$../design/booth_multiplier.sv:18$386 in module $paramod\booth_multiplier\N=s32'00000000000000000000000000000101.
Removed 53 dead cases from process $proc$../design/keypad_scanner.sv:30$37 in module keypad_scanner.
Marked 10 switch rules as full_case in process $proc$../design/keypad_scanner.sv:30$37 in module keypad_scanner.
Marked 1 switch rules as full_case in process $proc$../design/hex_to_7seg.sv:0$28 in module hex_to_7seg.
Removed 1 dead cases from process $proc$../design/display_mux.sv:0$27 in module display_mux.
Marked 1 switch rules as full_case in process $proc$../design/display_mux.sv:0$27 in module display_mux.
Marked 1 switch rules as full_case in process $proc$../design/display_mux.sv:11$23 in module display_mux.
Marked 3 switch rules as full_case in process $proc$../design/debounce.sv:27$12 in module debounce.
Marked 1 switch rules as full_case in process $proc$../design/debounce.sv:0$10 in module debounce.
Marked 1 switch rules as full_case in process $proc$../design/bin_to_bcd.sv:0$3 in module bin_to_bcd.
Marked 1 switch rules as full_case in process $proc$../design/bcd_to_bin.sv:0$1 in module bcd_to_bin.
Removed a total of 54 dead cases.

10.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 16 redundant assignments.
Promoted 49 assignments to connections.

10.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$339'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$337'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$335'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$333'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$331'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$329'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$327'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$325'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$323'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$321'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$319'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$317'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$315'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$313'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$311'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$309'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$307'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$305'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$303'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$301'.
  Set init value: \Q = 1'0
Found init rule in `\keypad_scanner.$proc$../design/keypad_scanner.sv:17$80'.
  Set init value: \counter = 16'0000000000000000
Found init rule in `\keypad_scanner.$proc$../design/keypad_scanner.sv:16$79'.
  Set init value: \col_select = 2'00
Found init rule in `\keypad_scanner.$proc$../design/keypad_scanner.sv:15$78'.
  Set init value: \state = 2'00

10.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338'.
Found async reset \CLEAR in `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$336'.
Found async reset \PRESET in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334'.
Found async reset \PRESET in `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$332'.
Found async reset \CLEAR in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318'.
Found async reset \CLEAR in `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$316'.
Found async reset \PRESET in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314'.
Found async reset \PRESET in `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$312'.
Found async reset \rst in `\top.$proc$../design/top.sv:131$105'.
Found async reset \rst in `\top.$proc$../design/top.sv:83$97'.
Found async reset \rst in `\top.$proc$../design/top.sv:61$92'.
Found async reset \rst in `\top.$proc$../design/top.sv:42$88'.
Found async reset \rst in `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
Found async reset \rst in `\debounce.$proc$../design/debounce.sv:27$12'.

10.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~52 debug messages>

10.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$342'.
Creating decoders for process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$339'.
Creating decoders for process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$337'.
Creating decoders for process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$336'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$335'.
Creating decoders for process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$333'.
Creating decoders for process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$332'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$331'.
Creating decoders for process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$330'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$329'.
Creating decoders for process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$328'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$327'.
Creating decoders for process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$326'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$325'.
Creating decoders for process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$324'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$323'.
Creating decoders for process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$322'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$321'.
Creating decoders for process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$320'.
Creating decoders for process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$319'.
Creating decoders for process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$317'.
Creating decoders for process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$316'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$315'.
Creating decoders for process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$313'.
Creating decoders for process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$312'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$311'.
Creating decoders for process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$310'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$309'.
Creating decoders for process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$308'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$307'.
Creating decoders for process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$306'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$305'.
Creating decoders for process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$304'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$303'.
Creating decoders for process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$302'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$301'.
Creating decoders for process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$300'.
Creating decoders for process `\top.$proc$../design/top.sv:0$116'.
     1/3: $3\display_data[15:0]
     2/3: $2\display_data[15:0]
     3/3: $1\display_data[15:0]
Creating decoders for process `\top.$proc$../design/top.sv:131$105'.
     1/1: $0\start_mul[0:0]
Creating decoders for process `\top.$proc$../design/top.sv:83$97'.
     1/4: $0\B_sign[0:0]
     2/4: $0\A_sign[0:0]
     3/4: $0\B_bcd[3:0]
     4/4: $0\A_bcd[3:0]
Creating decoders for process `\top.$proc$../design/top.sv:0$94'.
     1/2: $2\next_state[1:0]
     2/2: $1\next_state[1:0]
Creating decoders for process `\top.$proc$../design/top.sv:61$92'.
     1/1: $0\state[1:0]
Creating decoders for process `\top.$proc$../design/top.sv:42$88'.
     1/2: $0\key_strobe[0:0]
     2/2: $0\key_prev[0:0]
Creating decoders for process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
     1/8: $0\SC[2:0]
     2/8: $0\Q_1[0:0]
     3/8: $0\BR[4:0]
     4/8: $0\QR[4:0]
     5/8: $0\AC[5:0]
     6/8: $0\state[1:0]
     7/8: $0\done[0:0]
     8/8: $0\product[9:0]
Creating decoders for process `\keypad_scanner.$proc$../design/keypad_scanner.sv:28$81'.
Creating decoders for process `\keypad_scanner.$proc$../design/keypad_scanner.sv:17$80'.
Creating decoders for process `\keypad_scanner.$proc$../design/keypad_scanner.sv:16$79'.
Creating decoders for process `\keypad_scanner.$proc$../design/keypad_scanner.sv:15$78'.
Creating decoders for process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
     1/34: $4\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$76
     2/34: $4\decode_key$func$../design/keypad_scanner.sv:60$31.$result[3:0]$75
     3/34: $4\decode_key$func$../design/keypad_scanner.sv:59$30.$result[3:0]$74
     4/34: $4\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$73
     5/34: $3\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$65
     6/34: $3\decode_key$func$../design/keypad_scanner.sv:58$29.col_sel[1:0]$66
     7/34: $3\decode_key$func$../design/keypad_scanner.sv:61$32.col_sel[1:0]$72
     8/34: $3\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$71
     9/34: $3\decode_key$func$../design/keypad_scanner.sv:60$31.col_sel[1:0]$70
    10/34: $3\decode_key$func$../design/keypad_scanner.sv:60$31.$result[3:0]$69
    11/34: $3\decode_key$func$../design/keypad_scanner.sv:59$30.col_sel[1:0]$68
    12/34: $3\decode_key$func$../design/keypad_scanner.sv:59$30.$result[3:0]$67
    13/34: $2\decode_key$func$../design/keypad_scanner.sv:61$32.col_sel[1:0]$64
    14/34: $2\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$63
    15/34: $2\decode_key$func$../design/keypad_scanner.sv:60$31.col_sel[1:0]$62
    16/34: $2\decode_key$func$../design/keypad_scanner.sv:60$31.$result[3:0]$61
    17/34: $2\decode_key$func$../design/keypad_scanner.sv:59$30.col_sel[1:0]$60
    18/34: $2\decode_key$func$../design/keypad_scanner.sv:59$30.$result[3:0]$59
    19/34: $2\decode_key$func$../design/keypad_scanner.sv:58$29.col_sel[1:0]$58
    20/34: $2\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$57
    21/34: $1\decode_key$func$../design/keypad_scanner.sv:61$32.col_sel[1:0]$53
    22/34: $1\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$52
    23/34: $1\decode_key$func$../design/keypad_scanner.sv:60$31.col_sel[1:0]$51
    24/34: $1\decode_key$func$../design/keypad_scanner.sv:60$31.$result[3:0]$50
    25/34: $1\decode_key$func$../design/keypad_scanner.sv:59$30.col_sel[1:0]$49
    26/34: $1\decode_key$func$../design/keypad_scanner.sv:59$30.$result[3:0]$48
    27/34: $1\decode_key$func$../design/keypad_scanner.sv:58$29.col_sel[1:0]$47
    28/34: $1\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$46
    29/34: $0\key_pressed[0:0]
    30/34: $0\col_select[1:0]
    31/34: $0\col[3:0]
    32/34: $0\counter[15:0]
    33/34: $0\key[3:0]
    34/34: $0\state[1:0]
Creating decoders for process `\hex_to_7seg.$proc$../design/hex_to_7seg.sv:0$28'.
     1/1: $1\seg[6:0]
Creating decoders for process `\display_mux.$proc$../design/display_mux.sv:0$27'.
     1/2: $1\current_digit[3:0]
     2/2: $1\anodes[3:0]
Creating decoders for process `\display_mux.$proc$../design/display_mux.sv:11$23'.
     1/2: $0\refresh_counter[15:0]
     2/2: $0\digit_select[1:0]
Creating decoders for process `\debounce.$proc$../design/debounce.sv:14$21'.
Creating decoders for process `\debounce.$proc$../design/debounce.sv:13$19'.
Creating decoders for process `\debounce.$proc$../design/debounce.sv:27$12'.
     1/6: $0\reg_sat[5:0]
     2/6: $0\SAMPLE2[0:0]
     3/6: $0\SAMPLE1[0:0]
     4/6: $0\active[0:0]
     5/6: $0\counter[31:0]
     6/6: $0\key_pressed[0:0]
Creating decoders for process `\debounce.$proc$../design/debounce.sv:0$10'.
     1/1: $1\reg_next[5:0]
Creating decoders for process `\bin_to_bcd.$proc$../design/bin_to_bcd.sv:0$3'.
     1/1: $1\bcd_out[11:0]
Creating decoders for process `\bcd_to_bin.$proc$../design/bcd_to_bin.sv:0$1'.
     1/1: $1\bin_out[4:0]

10.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\display_data' from process `\top.$proc$../design/top.sv:0$116'.
No latch inferred for signal `\top.\next_state' from process `\top.$proc$../design/top.sv:0$94'.
No latch inferred for signal `\keypad_scanner.\any_key_pressed' from process `\keypad_scanner.$proc$../design/keypad_scanner.sv:28$81'.
No latch inferred for signal `\hex_to_7seg.\seg' from process `\hex_to_7seg.$proc$../design/hex_to_7seg.sv:0$28'.
No latch inferred for signal `\display_mux.\anodes' from process `\display_mux.$proc$../design/display_mux.sv:0$27'.
No latch inferred for signal `\display_mux.\current_digit' from process `\display_mux.$proc$../design/display_mux.sv:0$27'.
No latch inferred for signal `\debounce.\reg_add' from process `\debounce.$proc$../design/debounce.sv:14$21'.
No latch inferred for signal `\debounce.\reg_reset' from process `\debounce.$proc$../design/debounce.sv:13$19'.
No latch inferred for signal `\debounce.\reg_next' from process `\debounce.$proc$../design/debounce.sv:0$10'.
No latch inferred for signal `\bin_to_bcd.\bcd_out' from process `\bin_to_bcd.$proc$../design/bin_to_bcd.sv:0$3'.
No latch inferred for signal `\bcd_to_bin.\bin_out' from process `\bcd_to_bin.$proc$../design/bcd_to_bin.sv:0$1'.
No latch inferred for signal `\bcd_to_bin.\unsigned_bin' from process `\bcd_to_bin.$proc$../design/bcd_to_bin.sv:0$1'.

10.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ALU.\C' using process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$342'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$342'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338'.
  created $adff cell `$procdff$914' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$336'.
  created $adff cell `$procdff$915' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334'.
  created $adff cell `$procdff$916' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$332'.
  created $adff cell `$procdff$917' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$330'.
  created $dff cell `$procdff$918' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$328'.
  created $dff cell `$procdff$919' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$326'.
  created $dff cell `$procdff$920' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$324'.
  created $dff cell `$procdff$921' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$322'.
  created $dff cell `$procdff$922' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$320'.
  created $dff cell `$procdff$923' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318'.
  created $adff cell `$procdff$924' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$316'.
  created $adff cell `$procdff$925' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314'.
  created $adff cell `$procdff$926' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$312'.
  created $adff cell `$procdff$927' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$310'.
  created $dff cell `$procdff$928' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$308'.
  created $dff cell `$procdff$929' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$306'.
  created $dff cell `$procdff$930' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$304'.
  created $dff cell `$procdff$931' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$302'.
  created $dff cell `$procdff$932' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$300'.
  created $dff cell `$procdff$933' with positive edge clock.
Creating register for signal `\top.\start_mul' using process `\top.$proc$../design/top.sv:131$105'.
  created $adff cell `$procdff$934' with positive edge clock and negative level reset.
Creating register for signal `\top.\A_bcd' using process `\top.$proc$../design/top.sv:83$97'.
  created $adff cell `$procdff$935' with positive edge clock and negative level reset.
Creating register for signal `\top.\B_bcd' using process `\top.$proc$../design/top.sv:83$97'.
  created $adff cell `$procdff$936' with positive edge clock and negative level reset.
Creating register for signal `\top.\A_sign' using process `\top.$proc$../design/top.sv:83$97'.
  created $adff cell `$procdff$937' with positive edge clock and negative level reset.
Creating register for signal `\top.\B_sign' using process `\top.$proc$../design/top.sv:83$97'.
  created $adff cell `$procdff$938' with positive edge clock and negative level reset.
Creating register for signal `\top.\state' using process `\top.$proc$../design/top.sv:61$92'.
  created $adff cell `$procdff$939' with positive edge clock and negative level reset.
Creating register for signal `\top.\key_prev' using process `\top.$proc$../design/top.sv:42$88'.
  created $adff cell `$procdff$940' with positive edge clock and negative level reset.
Creating register for signal `\top.\key_strobe' using process `\top.$proc$../design/top.sv:42$88'.
  created $adff cell `$procdff$941' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\product' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$942' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\done' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$943' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\state' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$944' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\AC' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$945' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\QR' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$946' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\BR' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\Q_1' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$950' with positive edge clock and negative level reset.
Creating register for signal `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.\SC' using process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
  created $adff cell `$procdff$951' with positive edge clock and negative level reset.
Creating register for signal `\keypad_scanner.\state' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$952' with positive edge clock.
Creating register for signal `\keypad_scanner.\key' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$953' with positive edge clock.
Creating register for signal `\keypad_scanner.\key_pressed' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `\keypad_scanner.\counter' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$955' with positive edge clock.
Creating register for signal `\keypad_scanner.\col' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$956' with positive edge clock.
Creating register for signal `\keypad_scanner.\col_select' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$957' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:58$29.$result' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$958' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:58$29.col_sel' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:59$30.$result' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$960' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:59$30.col_sel' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:60$31.$result' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$962' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:60$31.col_sel' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$963' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:61$32.$result' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$964' with positive edge clock.
Creating register for signal `\keypad_scanner.\decode_key$func$../design/keypad_scanner.sv:61$32.col_sel' using process `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
  created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\display_mux.\refresh_counter' using process `\display_mux.$proc$../design/display_mux.sv:11$23'.
  created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\display_mux.\digit_select' using process `\display_mux.$proc$../design/display_mux.sv:11$23'.
  created $dff cell `$procdff$967' with positive edge clock.
Creating register for signal `\debounce.\key_pressed' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$968' with positive edge clock and negative level reset.
Creating register for signal `\debounce.\reg_sat' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$969' with positive edge clock and negative level reset.
Creating register for signal `\debounce.\SAMPLE1' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$970' with positive edge clock and negative level reset.
Creating register for signal `\debounce.\SAMPLE2' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$971' with positive edge clock and negative level reset.
Creating register for signal `\debounce.\counter' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$972' with positive edge clock and negative level reset.
Creating register for signal `\debounce.\active' using process `\debounce.$proc$../design/debounce.sv:27$12'.
  created $adff cell `$procdff$973' with positive edge clock and negative level reset.

10.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ALU.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:661$342'.
Removing empty process `DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$339'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338'.
Removing empty process `DFFNCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:535$338'.
Removing empty process `DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$337'.
Removing empty process `DFFNC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:515$336'.
Removing empty process `DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$335'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334'.
Removing empty process `DFFNPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:496$334'.
Removing empty process `DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$333'.
Removing empty process `DFFNP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:476$332'.
Removing empty process `DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$331'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$330'.
Removing empty process `DFFNRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:457$330'.
Removing empty process `DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$329'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$328'.
Removing empty process `DFFNR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:437$328'.
Removing empty process `DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$327'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$326'.
Removing empty process `DFFNSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:418$326'.
Removing empty process `DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$325'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$324'.
Removing empty process `DFFNS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:398$324'.
Removing empty process `DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$323'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$322'.
Removing empty process `DFFNE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:381$322'.
Removing empty process `DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$321'.
Removing empty process `DFFN.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:366$320'.
Removing empty process `DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$319'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318'.
Removing empty process `DFFCE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:348$318'.
Removing empty process `DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$317'.
Removing empty process `DFFC.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:328$316'.
Removing empty process `DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$315'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314'.
Removing empty process `DFFPE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:309$314'.
Removing empty process `DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$313'.
Removing empty process `DFFP.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:289$312'.
Removing empty process `DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$311'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$310'.
Removing empty process `DFFRE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:270$310'.
Removing empty process `DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$309'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$308'.
Removing empty process `DFFR.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:250$308'.
Removing empty process `DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$307'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$306'.
Removing empty process `DFFSE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:231$306'.
Removing empty process `DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$305'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$304'.
Removing empty process `DFFS.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:211$304'.
Removing empty process `DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$303'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$302'.
Removing empty process `DFFE.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:194$302'.
Removing empty process `DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:0$301'.
Removing empty process `DFF.$proc$c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_sim.v:179$300'.
Found and cleaned up 3 empty switches in `\top.$proc$../design/top.sv:0$116'.
Removing empty process `top.$proc$../design/top.sv:0$116'.
Removing empty process `top.$proc$../design/top.sv:131$105'.
Found and cleaned up 8 empty switches in `\top.$proc$../design/top.sv:83$97'.
Removing empty process `top.$proc$../design/top.sv:83$97'.
Found and cleaned up 2 empty switches in `\top.$proc$../design/top.sv:0$94'.
Removing empty process `top.$proc$../design/top.sv:0$94'.
Removing empty process `top.$proc$../design/top.sv:61$92'.
Removing empty process `top.$proc$../design/top.sv:42$88'.
Found and cleaned up 4 empty switches in `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
Removing empty process `$paramod\booth_multiplier\N=s32'00000000000000000000000000000101.$proc$../design/booth_multiplier.sv:18$386'.
Removing empty process `keypad_scanner.$proc$../design/keypad_scanner.sv:28$81'.
Removing empty process `keypad_scanner.$proc$../design/keypad_scanner.sv:17$80'.
Removing empty process `keypad_scanner.$proc$../design/keypad_scanner.sv:16$79'.
Removing empty process `keypad_scanner.$proc$../design/keypad_scanner.sv:15$78'.
Found and cleaned up 10 empty switches in `\keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
Removing empty process `keypad_scanner.$proc$../design/keypad_scanner.sv:30$37'.
Found and cleaned up 1 empty switch in `\hex_to_7seg.$proc$../design/hex_to_7seg.sv:0$28'.
Removing empty process `hex_to_7seg.$proc$../design/hex_to_7seg.sv:0$28'.
Found and cleaned up 1 empty switch in `\display_mux.$proc$../design/display_mux.sv:0$27'.
Removing empty process `display_mux.$proc$../design/display_mux.sv:0$27'.
Found and cleaned up 1 empty switch in `\display_mux.$proc$../design/display_mux.sv:11$23'.
Removing empty process `display_mux.$proc$../design/display_mux.sv:11$23'.
Removing empty process `debounce.$proc$../design/debounce.sv:14$21'.
Removing empty process `debounce.$proc$../design/debounce.sv:13$19'.
Found and cleaned up 3 empty switches in `\debounce.$proc$../design/debounce.sv:27$12'.
Removing empty process `debounce.$proc$../design/debounce.sv:27$12'.
Found and cleaned up 1 empty switch in `\debounce.$proc$../design/debounce.sv:0$10'.
Removing empty process `debounce.$proc$../design/debounce.sv:0$10'.
Found and cleaned up 1 empty switch in `\bin_to_bcd.$proc$../design/bin_to_bcd.sv:0$3'.
Removing empty process `bin_to_bcd.$proc$../design/bin_to_bcd.sv:0$3'.
Found and cleaned up 1 empty switch in `\bcd_to_bin.$proc$../design/bcd_to_bin.sv:0$1'.
Removing empty process `bcd_to_bin.$proc$../design/bcd_to_bin.sv:0$1'.
Cleaned up 54 empty switches.

10.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>
Optimizing module $paramod\booth_multiplier\N=s32'00000000000000000000000000000101.
<suppressed ~7 debug messages>
Optimizing module keypad_scanner.
<suppressed ~19 debug messages>
Optimizing module hex_to_7seg.
Optimizing module display_mux.
<suppressed ~2 debug messages>
Optimizing module debounce.
<suppressed ~1 debug messages>
Optimizing module bin_to_bcd.
Optimizing module bcd_to_bin.

10.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\booth_multiplier\N=s32'00000000000000000000000000000101.
Deleting now unused module keypad_scanner.
Deleting now unused module hex_to_7seg.
Deleting now unused module display_mux.
Deleting now unused module debounce.
Deleting now unused module bin_to_bcd.
Deleting now unused module bcd_to_bin.
<suppressed ~11 debug messages>

10.5. Executing TRIBUF pass.

10.6. Executing DEMINOUT pass (demote inout ports to input or output).

10.7. Executing SYNTH pass.

10.7.1. Executing PROC pass (convert processes to netlists).

10.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

10.7.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

10.7.1.4. Executing PROC_INIT pass (extract init attributes).

10.7.1.5. Executing PROC_ARST pass (detect async resets in processes).

10.7.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

10.7.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

10.7.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

10.7.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

10.7.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

10.7.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.7.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

10.7.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 122 unused cells and 369 unused wires.
<suppressed ~129 debug messages>

10.7.4. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10.7.5. Executing OPT pass (performing simple optimizations).

10.7.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~231 debug messages>
Removed a total of 77 cells.

10.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\scanner.\db0.$procmux$885: \scanner.db0.active -> 1'0
      Replacing known input bits on port B of cell $flatten\scanner.\db0.$procmux$883: \scanner.db0.active -> 1'1
      Replacing known input bits on port A of cell $flatten\scanner.\db1.$procmux$885: \scanner.db1.active -> 1'0
      Replacing known input bits on port B of cell $flatten\scanner.\db1.$procmux$883: \scanner.db1.active -> 1'1
      Replacing known input bits on port A of cell $flatten\scanner.\db2.$procmux$885: \scanner.db2.active -> 1'0
      Replacing known input bits on port B of cell $flatten\scanner.\db2.$procmux$883: \scanner.db2.active -> 1'1
      Replacing known input bits on port A of cell $flatten\scanner.\db3.$procmux$885: \scanner.db3.active -> 1'0
      Replacing known input bits on port B of cell $flatten\scanner.\db3.$procmux$883: \scanner.db3.active -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\scanner.$procmux$581.
    dead port 2/2 on $mux $flatten\scanner.$procmux$583.
    dead port 2/2 on $mux $flatten\scanner.$procmux$585.
    dead port 2/2 on $mux $flatten\scanner.$procmux$596.
    dead port 2/2 on $mux $flatten\scanner.$procmux$598.
    dead port 2/2 on $mux $flatten\scanner.$procmux$600.
    dead port 2/2 on $mux $flatten\scanner.$procmux$612.
    dead port 2/2 on $mux $flatten\scanner.$procmux$614.
    dead port 2/2 on $mux $flatten\scanner.$procmux$616.
    dead port 2/2 on $mux $flatten\scanner.$procmux$629.
    dead port 2/2 on $mux $flatten\scanner.$procmux$631.
    dead port 2/2 on $mux $flatten\scanner.$procmux$633.
    dead port 2/2 on $mux $procmux$449.
    dead port 2/2 on $mux $procmux$457.
    dead port 2/2 on $mux $procmux$518.
Removed 15 multiplexer ports.
<suppressed ~39 debug messages>

10.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

10.7.5.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active ARST on $flatten\scanner.\db3.$procdff$973 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db3.$procdff$972 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db3.$procdff$971 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db3.$procdff$970 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db3.$procdff$969 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db3.$procdff$968 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$973 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$972 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$971 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$970 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$969 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db2.$procdff$968 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$973 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$972 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$971 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$970 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$969 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db1.$procdff$968 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$973 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$972 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$971 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$970 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$969 ($adff) from module top.
Removing never-active ARST on $flatten\scanner.\db0.$procdff$968 ($adff) from module top.

10.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 84 unused wires.
<suppressed ~1 debug messages>

10.7.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.5.9. Rerunning OPT passes. (Maybe there is more to do..)

10.7.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

10.7.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\scanner.$procmux$810: $auto$opt_reduce.cc:134:opt_pmux$975
  Optimizing cells in module \top.
Performed a total of 1 changes.

10.7.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.5.13. Executing OPT_DFF pass (perform DFF optimizations).

10.7.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.5.16. Rerunning OPT passes. (Maybe there is more to do..)

10.7.5.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

10.7.5.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.5.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.5.20. Executing OPT_DFF pass (perform DFF optimizations).

10.7.5.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.5.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.5.23. Finished OPT passes. (There is nothing left to do.)

10.7.6. Executing FSM pass (extract and optimize FSM).

10.7.6.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.mul.state.
Not marking top.scanner.col as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking top.scanner.key as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.scanner.state as FSM state register:
    Register has an initialization value.
Found FSM state register top.state.

10.7.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\mul.state' from module `\top'.
  found $adff cell for state register: $flatten\mul.$procdff$944
  root of input selection tree: $flatten\mul.$0\state[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: $flatten\mul.$procmux$559_CMP
  found ctrl input: $flatten\mul.$procmux$525_CMP
  found ctrl input: $flatten\mul.$procmux$554_CMP
  found ctrl input: $flatten\mul.$procmux$528_CMP
  found ctrl input: $flatten\mul.$eq$../design/booth_multiplier.sv:57$391_Y
  found state code: 2'01
  found state code: 2'11
  found state code: 2'10
  found ctrl input: \start_mul
  found ctrl output: $flatten\mul.$procmux$559_CMP
  found ctrl output: $flatten\mul.$procmux$554_CMP
  found ctrl output: $flatten\mul.$procmux$528_CMP
  found ctrl output: $flatten\mul.$procmux$525_CMP
  ctrl inputs: { $flatten\mul.$eq$../design/booth_multiplier.sv:57$391_Y \start_mul }
  ctrl outputs: { $flatten\mul.$0\state[1:0] $flatten\mul.$procmux$525_CMP $flatten\mul.$procmux$528_CMP $flatten\mul.$procmux$554_CMP $flatten\mul.$procmux$559_CMP }
  transition:       2'00 2'-0 ->       2'00 6'000100
  transition:       2'00 2'-1 ->       2'01 6'010100
  transition:       2'10 2'0- ->       2'01 6'011000
  transition:       2'10 2'1- ->       2'11 6'111000
  transition:       2'01 2'-- ->       2'10 6'100010
  transition:       2'11 2'-- ->       2'00 6'000001
Extracting FSM `\state' from module `\top'.
  found $adff cell for state register: $procdff$939
  root of input selection tree: \next_state
  found reset state: 2'00 (from async reset)
  found ctrl input: $logic_and$../design/top.sv:135$108_Y
  found ctrl input: $procmux$461_CMP
  found ctrl input: $eq$../design/top.sv:105$104_Y
  found ctrl input: $eq$../design/top.sv:104$103_Y
  found state code: 2'10
  found state code: 2'01
  found ctrl output: $eq$../design/top.sv:104$103_Y
  found ctrl output: $eq$../design/top.sv:105$104_Y
  found ctrl output: $procmux$461_CMP
  ctrl inputs: $logic_and$../design/top.sv:135$108_Y
  ctrl outputs: { $procmux$461_CMP $eq$../design/top.sv:105$104_Y $eq$../design/top.sv:104$103_Y \next_state }
  transition:       2'00 1'0 ->       2'00 5'00100
  transition:       2'00 1'1 ->       2'01 5'00101
  transition:       2'10 1'0 ->       2'10 5'10010
  transition:       2'10 1'1 ->       2'00 5'10000
  transition:       2'01 1'0 ->       2'01 5'01001
  transition:       2'01 1'1 ->       2'10 5'01010

10.7.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$982' from module `\top'.
Optimizing FSM `$fsm$\mul.state$976' from module `\top'.

10.7.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 14 unused wires.
<suppressed ~15 debug messages>

10.7.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mul.state$976' from module `\top'.
  Removing unused output signal $flatten\mul.$0\state[1:0] [0].
  Removing unused output signal $flatten\mul.$0\state[1:0] [1].
Optimizing FSM `$fsm$\state$982' from module `\top'.
  Removing unused output signal \next_state [0].
  Removing unused output signal \next_state [1].

10.7.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\mul.state$976' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\state$982' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

10.7.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\mul.state$976' from module `top':
-------------------------------------

  Information on FSM $fsm$\mul.state$976 (\mul.state):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \start_mul
    1: $flatten\mul.$eq$../design/booth_multiplier.sv:57$391_Y

  Output signals:
    0: $flatten\mul.$procmux$559_CMP
    1: $flatten\mul.$procmux$554_CMP
    2: $flatten\mul.$procmux$528_CMP
    3: $flatten\mul.$procmux$525_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'-0   ->     0 4'0100
      1:     0 2'-1   ->     2 4'0100
      2:     1 2'0-   ->     2 4'1000
      3:     1 2'1-   ->     3 4'1000
      4:     2 2'--   ->     1 4'0010
      5:     3 2'--   ->     0 4'0001

-------------------------------------

FSM `$fsm$\state$982' from module `top':
-------------------------------------

  Information on FSM $fsm$\state$982 (\state):

  Number of input signals:    1
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: $logic_and$../design/top.sv:135$108_Y

  Output signals:
    0: $eq$../design/top.sv:104$103_Y
    1: $eq$../design/top.sv:105$104_Y
    2: $procmux$461_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 1'0   ->     0 3'001
      1:     0 1'1   ->     2 3'001
      2:     1 1'1   ->     0 3'100
      3:     1 1'0   ->     1 3'100
      4:     2 1'1   ->     1 3'010
      5:     2 1'0   ->     2 3'010

-------------------------------------

10.7.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\mul.state$976' from module `\top'.
Mapping FSM `$fsm$\state$982' from module `\top'.

10.7.7. Executing OPT pass (performing simple optimizations).

10.7.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

10.7.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

10.7.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

10.7.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$938 ($adff) from module top (D = $procmux$470_Y, Q = \B_sign).
Adding EN signal on $procdff$937 ($adff) from module top (D = $procmux$485_Y, Q = \A_sign).
Adding EN signal on $procdff$936 ($adff) from module top (D = $procmux$499_Y, Q = \B_bcd).
Adding EN signal on $procdff$935 ($adff) from module top (D = $procmux$507_Y, Q = \A_bcd).
Adding SRST signal on $flatten\scanner.\db3.$procdff$973 ($dff) from module top (D = $flatten\scanner.\db3.$procmux$885_Y, Q = \scanner.db3.active, rval = 1'1).
Adding SRST signal on $flatten\scanner.\db3.$procdff$972 ($dff) from module top (D = $flatten\scanner.\db3.$procmux$893_Y, Q = \scanner.db3.counter, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1079 ($sdff) from module top (D = $flatten\scanner.\db3.$add$../design/debounce.sv:46$18_Y, Q = \scanner.db3.counter).
Adding EN signal on $flatten\scanner.\db3.$procdff$969 ($dff) from module top (D = \scanner.db3.reg_next, Q = \scanner.db3.reg_sat).
Adding SRST signal on $flatten\scanner.\db3.$procdff$968 ($dff) from module top (D = $flatten\scanner.\db3.$procmux$901_Y, Q = \scanner.db3.key_pressed, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1086 ($sdff) from module top (D = 1'0, Q = \scanner.db3.key_pressed).
Adding SRST signal on $flatten\scanner.\db2.$procdff$973 ($dff) from module top (D = $flatten\scanner.\db2.$procmux$885_Y, Q = \scanner.db2.active, rval = 1'1).
Adding SRST signal on $flatten\scanner.\db2.$procdff$972 ($dff) from module top (D = $flatten\scanner.\db2.$procmux$893_Y, Q = \scanner.db2.counter, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1093 ($sdff) from module top (D = $flatten\scanner.\db2.$add$../design/debounce.sv:46$18_Y, Q = \scanner.db2.counter).
Adding EN signal on $flatten\scanner.\db2.$procdff$969 ($dff) from module top (D = \scanner.db2.reg_next, Q = \scanner.db2.reg_sat).
Adding SRST signal on $flatten\scanner.\db2.$procdff$968 ($dff) from module top (D = $flatten\scanner.\db2.$procmux$901_Y, Q = \scanner.db2.key_pressed, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1100 ($sdff) from module top (D = 1'0, Q = \scanner.db2.key_pressed).
Adding SRST signal on $flatten\scanner.\db1.$procdff$973 ($dff) from module top (D = $flatten\scanner.\db1.$procmux$885_Y, Q = \scanner.db1.active, rval = 1'1).
Adding SRST signal on $flatten\scanner.\db1.$procdff$972 ($dff) from module top (D = $flatten\scanner.\db1.$procmux$893_Y, Q = \scanner.db1.counter, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1107 ($sdff) from module top (D = $flatten\scanner.\db1.$add$../design/debounce.sv:46$18_Y, Q = \scanner.db1.counter).
Adding EN signal on $flatten\scanner.\db1.$procdff$969 ($dff) from module top (D = \scanner.db1.reg_next, Q = \scanner.db1.reg_sat).
Adding SRST signal on $flatten\scanner.\db1.$procdff$968 ($dff) from module top (D = $flatten\scanner.\db1.$procmux$901_Y, Q = \scanner.db1.key_pressed, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1114 ($sdff) from module top (D = 1'0, Q = \scanner.db1.key_pressed).
Adding SRST signal on $flatten\scanner.\db0.$procdff$973 ($dff) from module top (D = $flatten\scanner.\db0.$procmux$885_Y, Q = \scanner.db0.active, rval = 1'1).
Adding SRST signal on $flatten\scanner.\db0.$procdff$972 ($dff) from module top (D = $flatten\scanner.\db0.$procmux$893_Y, Q = \scanner.db0.counter, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1121 ($sdff) from module top (D = $flatten\scanner.\db0.$add$../design/debounce.sv:46$18_Y, Q = \scanner.db0.counter).
Adding EN signal on $flatten\scanner.\db0.$procdff$969 ($dff) from module top (D = \scanner.db0.reg_next, Q = \scanner.db0.reg_sat).
Adding SRST signal on $flatten\scanner.\db0.$procdff$968 ($dff) from module top (D = $flatten\scanner.\db0.$procmux$901_Y, Q = \scanner.db0.key_pressed, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1128 ($sdff) from module top (D = 1'0, Q = \scanner.db0.key_pressed).
Adding EN signal on $flatten\scanner.$procdff$957 ($dff) from module top (D = $flatten\scanner.$add$../design/keypad_scanner.sv:35$54_Y [1:0], Q = \scanner.col_select).
Adding EN signal on $flatten\scanner.$procdff$956 ($dff) from module top (D = $flatten\scanner.$procmux$824_Y, Q = \scanner.col).
Adding EN signal on $flatten\scanner.$procdff$955 ($dff) from module top (D = $flatten\scanner.$0\counter[15:0], Q = \scanner.counter).
Adding SRST signal on $flatten\scanner.$procdff$954 ($dff) from module top (D = $flatten\scanner.$procmux$808_Y, Q = \scanner.key_pressed, rval = 1'0).
Adding EN signal on $flatten\scanner.$procdff$953 ($dff) from module top (D = $flatten\scanner.$procmux$842_Y, Q = \scanner.key).
Adding EN signal on $flatten\scanner.$procdff$952 ($dff) from module top (D = $flatten\scanner.$0\state[1:0], Q = \scanner.state).
Adding EN signal on $flatten\mul.$procdff$951 ($adff) from module top (D = $flatten\mul.$0\SC[2:0], Q = \mul.SC).
Adding EN signal on $flatten\mul.$procdff$950 ($adff) from module top (D = $flatten\mul.$0\Q_1[0:0], Q = \mul.Q_1).
Adding EN signal on $flatten\mul.$procdff$949 ($dff) from module top (D = \mul.multiplicand, Q = \mul.BR).
Adding SRST signal on $auto$ff.cc:266:slice$1166 ($dffe) from module top (D = $flatten\convA.$neg$../design/bcd_to_bin.sv:14$2_Y [4], Q = \mul.BR [4], rval = 1'0).
Adding EN signal on $flatten\mul.$procdff$946 ($adff) from module top (D = $flatten\mul.$0\QR[4:0], Q = \mul.QR).
Adding EN signal on $flatten\mul.$procdff$945 ($adff) from module top (D = $flatten\mul.$0\AC[5:0] [4:0], Q = \mul.AC [4:0]).
Adding EN signal on $flatten\mul.$procdff$945 ($adff) from module top (D = $flatten\mul.$0\AC[5:0] [5], Q = \mul.AC [5]).
Adding EN signal on $flatten\mul.$procdff$942 ($adff) from module top (D = { \mul.AC [4:0] \mul.QR }, Q = \mul.product).
Adding EN signal on $flatten\display.$procdff$967 ($dff) from module top (D = $flatten\display.$add$../design/display_mux.sv:14$25_Y [1:0], Q = \display.digit_select).
Adding SRST signal on $flatten\display.$procdff$966 ($dff) from module top (D = $flatten\display.$add$../design/display_mux.sv:16$26_Y [15:0], Q = \display.refresh_counter, rval = 16'0000000000000000).

10.7.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 43 unused cells and 63 unused wires.
<suppressed ~45 debug messages>

10.7.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~20 debug messages>

10.7.7.9. Rerunning OPT passes. (Maybe there is more to do..)

10.7.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.7.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

10.7.7.13. Executing OPT_DFF pass (perform DFF optimizations).

10.7.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 16 unused wires.
<suppressed ~5 debug messages>

10.7.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.7.16. Rerunning OPT passes. (Maybe there is more to do..)

10.7.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.7.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.7.20. Executing OPT_DFF pass (perform DFF optimizations).

10.7.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.7.23. Finished OPT passes. (There is nothing left to do.)

10.7.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 25 address bits (of 32) from memory init port top.$flatten\bcd_converter.$auto$mem.cc:319:emit$399 ($flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397).
Removed top 28 address bits (of 32) from memory init port top.$flatten\display.\conv.$auto$mem.cc:319:emit$395 ($flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393).
Removed top 31 bits (of 32) from port B of cell top.$lt$../design/top.sv:140$111 ($lt).
Removed top 3 bits (of 10) from mux cell top.$ternary$../design/top.sv:140$113 ($mux).
Removed top 1 bits (of 4) from mux cell top.$ternary$../design/top.sv:149$115 ($mux).
Removed top 11 bits (of 16) from mux cell top.$procmux$447 ($mux).
Removed top 11 bits (of 16) from mux cell top.$procmux$455 ($mux).
Removed top 1 bits (of 16) from mux cell top.$procmux$460 ($pmux).
Removed top 3 bits (of 4) from port B of cell top.$procmux$500_CMP1 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$500_CMP2 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$500_CMP3 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$500_CMP4 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$500_CMP5 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$500_CMP6 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$500_CMP7 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1147 ($ne).
Removed top 8 bits (of 32) from port B of cell top.$flatten\scanner.\db3.$lt$../design/debounce.sv:45$17 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db3.$add$../design/debounce.sv:46$18 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.\db3.$procmux$908_CMP0 ($eq).
Removed top 8 bits (of 32) from port B of cell top.$flatten\scanner.\db2.$lt$../design/debounce.sv:45$17 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db2.$add$../design/debounce.sv:46$18 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.\db2.$procmux$908_CMP0 ($eq).
Removed top 8 bits (of 32) from port B of cell top.$flatten\scanner.\db1.$lt$../design/debounce.sv:45$17 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db1.$add$../design/debounce.sv:46$18 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.\db1.$procmux$908_CMP0 ($eq).
Removed top 8 bits (of 32) from port B of cell top.$flatten\scanner.\db0.$lt$../design/debounce.sv:45$17 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db0.$add$../design/debounce.sv:46$18 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.\db0.$procmux$908_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.$procmux$837_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\scanner.$procmux$630_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\scanner.$procmux$613_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\scanner.$procmux$597_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\scanner.$procmux$579_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.$add$../design/keypad_scanner.sv:51$56 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\scanner.$add$../design/keypad_scanner.sv:51$56 ($add).
Removed top 5 bits (of 16) from port B of cell top.$flatten\scanner.$eq$../design/keypad_scanner.sv:47$55 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.$add$../design/keypad_scanner.sv:35$54 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$flatten\scanner.$add$../design/keypad_scanner.sv:35$54 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db3.$add$../design/debounce.sv:22$11 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\scanner.\db3.$add$../design/debounce.sv:22$11 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db2.$add$../design/debounce.sv:22$11 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\scanner.\db2.$add$../design/debounce.sv:22$11 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db1.$add$../design/debounce.sv:22$11 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\scanner.\db1.$add$../design/debounce.sv:22$11 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\scanner.\db0.$add$../design/debounce.sv:22$11 ($add).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\scanner.\db0.$add$../design/debounce.sv:22$11 ($add).
Removed top 1 bits (of 5) from mux cell top.$flatten\convA.$procmux$912 ($mux).
Converting cell top.$flatten\convA.$neg$../design/bcd_to_bin.sv:14$2 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell top.$flatten\convA.$neg$../design/bcd_to_bin.sv:14$2 ($neg).
Converting cell top.$flatten\convB.$neg$../design/bcd_to_bin.sv:14$2 ($neg) from signed to unsigned.
Removed top 1 bits (of 5) from port A of cell top.$flatten\convB.$neg$../design/bcd_to_bin.sv:14$2 ($neg).
Removed top 1 bits (of 2) from port B of cell top.$flatten\mul.$procmux$553_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\mul.$eq$../design/booth_multiplier.sv:57$391 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\mul.$sub$../design/booth_multiplier.sv:56$390 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\mul.$sub$../design/booth_multiplier.sv:56$390 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$flatten\display.$procmux$869_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$add$../design/display_mux.sv:16$26 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$flatten\display.$add$../design/display_mux.sv:16$26 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$add$../design/display_mux.sv:14$25 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$flatten\display.$add$../design/display_mux.sv:14$25 ($add).
Removed top 1 bits (of 16) from port B of cell top.$flatten\display.$eq$../design/display_mux.sv:12$24 ($eq).
Removed top 3 bits (of 10) from port Y of cell top.$neg$../design/top.sv:140$112 ($neg).
Removed top 3 bits (of 10) from port A of cell top.$neg$../design/top.sv:140$112 ($neg).
Removed top 11 bits (of 16) from wire top.$2\display_data[15:0].
Removed top 11 bits (of 16) from wire top.$3\display_data[15:0].
Removed top 30 bits (of 32) from wire top.$flatten\display.$add$../design/display_mux.sv:14$25_Y.
Removed top 28 bits (of 32) from wire top.$flatten\display.$add$../design/display_mux.sv:16$26_Y.
Removed top 29 bits (of 32) from wire top.$flatten\mul.$sub$../design/booth_multiplier.sv:56$390_Y.
Removed top 30 bits (of 32) from wire top.$flatten\scanner.$add$../design/keypad_scanner.sv:35$54_Y.
Removed top 16 bits (of 32) from wire top.$flatten\scanner.$add$../design/keypad_scanner.sv:51$56_Y.
Removed top 26 bits (of 32) from wire top.$flatten\scanner.\db0.$add$../design/debounce.sv:22$11_Y.
Removed top 26 bits (of 32) from wire top.$flatten\scanner.\db1.$add$../design/debounce.sv:22$11_Y.
Removed top 26 bits (of 32) from wire top.$flatten\scanner.\db2.$add$../design/debounce.sv:22$11_Y.
Removed top 26 bits (of 32) from wire top.$flatten\scanner.\db3.$add$../design/debounce.sv:22$11_Y.
Removed top 3 bits (of 10) from wire top.$neg$../design/top.sv:140$112_Y.
Removed top 1 bits (of 5) from wire top.A_bin.
Removed top 1 bits (of 16) from wire top.display_data.
Removed top 1 bits (of 4) from wire top.signo.

10.7.9. Executing PEEPOPT pass (run peephole optimizers).

10.7.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

10.7.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\convA.$neg$../design/bcd_to_bin.sv:14$2 ($neg).
  creating $macc model for $flatten\convB.$neg$../design/bcd_to_bin.sv:14$2 ($neg).
  creating $macc model for $flatten\display.$add$../design/display_mux.sv:14$25 ($add).
  creating $macc model for $flatten\display.$add$../design/display_mux.sv:16$26 ($add).
  creating $macc model for $flatten\mul.$add$../design/booth_multiplier.sv:43$388 ($add).
  creating $macc model for $flatten\mul.$sub$../design/booth_multiplier.sv:44$389 ($sub).
  creating $macc model for $flatten\mul.$sub$../design/booth_multiplier.sv:56$390 ($sub).
  creating $macc model for $flatten\scanner.$add$../design/keypad_scanner.sv:35$54 ($add).
  creating $macc model for $flatten\scanner.$add$../design/keypad_scanner.sv:51$56 ($add).
  creating $macc model for $flatten\scanner.\db0.$add$../design/debounce.sv:22$11 ($add).
  creating $macc model for $flatten\scanner.\db0.$add$../design/debounce.sv:46$18 ($add).
  creating $macc model for $flatten\scanner.\db1.$add$../design/debounce.sv:22$11 ($add).
  creating $macc model for $flatten\scanner.\db1.$add$../design/debounce.sv:46$18 ($add).
  creating $macc model for $flatten\scanner.\db2.$add$../design/debounce.sv:22$11 ($add).
  creating $macc model for $flatten\scanner.\db2.$add$../design/debounce.sv:46$18 ($add).
  creating $macc model for $flatten\scanner.\db3.$add$../design/debounce.sv:22$11 ($add).
  creating $macc model for $flatten\scanner.\db3.$add$../design/debounce.sv:46$18 ($add).
  creating $macc model for $neg$../design/top.sv:140$112 ($neg).
  creating $alu model for $macc $neg$../design/top.sv:140$112.
  creating $alu model for $macc $flatten\scanner.\db3.$add$../design/debounce.sv:46$18.
  creating $alu model for $macc $flatten\scanner.\db3.$add$../design/debounce.sv:22$11.
  creating $alu model for $macc $flatten\scanner.\db2.$add$../design/debounce.sv:46$18.
  creating $alu model for $macc $flatten\scanner.\db2.$add$../design/debounce.sv:22$11.
  creating $alu model for $macc $flatten\scanner.\db1.$add$../design/debounce.sv:46$18.
  creating $alu model for $macc $flatten\scanner.\db1.$add$../design/debounce.sv:22$11.
  creating $alu model for $macc $flatten\scanner.\db0.$add$../design/debounce.sv:46$18.
  creating $alu model for $macc $flatten\scanner.\db0.$add$../design/debounce.sv:22$11.
  creating $alu model for $macc $flatten\scanner.$add$../design/keypad_scanner.sv:51$56.
  creating $alu model for $macc $flatten\scanner.$add$../design/keypad_scanner.sv:35$54.
  creating $alu model for $macc $flatten\mul.$sub$../design/booth_multiplier.sv:56$390.
  creating $alu model for $macc $flatten\mul.$sub$../design/booth_multiplier.sv:44$389.
  creating $alu model for $macc $flatten\mul.$add$../design/booth_multiplier.sv:43$388.
  creating $alu model for $macc $flatten\display.$add$../design/display_mux.sv:16$26.
  creating $alu model for $macc $flatten\display.$add$../design/display_mux.sv:14$25.
  creating $alu model for $macc $flatten\convB.$neg$../design/bcd_to_bin.sv:14$2.
  creating $alu model for $macc $flatten\convA.$neg$../design/bcd_to_bin.sv:14$2.
  creating $alu model for $flatten\scanner.\db0.$lt$../design/debounce.sv:45$17 ($lt): new $alu
  creating $alu model for $flatten\scanner.\db1.$lt$../design/debounce.sv:45$17 ($lt): new $alu
  creating $alu model for $flatten\scanner.\db2.$lt$../design/debounce.sv:45$17 ($lt): new $alu
  creating $alu model for $flatten\scanner.\db3.$lt$../design/debounce.sv:45$17 ($lt): new $alu
  creating $alu model for $lt$../design/top.sv:140$111 ($lt): new $alu
  creating $alu cell for $lt$../design/top.sv:140$111: $auto$alumacc.cc:485:replace_alu$1221
  creating $alu cell for $flatten\scanner.\db3.$lt$../design/debounce.sv:45$17: $auto$alumacc.cc:485:replace_alu$1234
  creating $alu cell for $flatten\scanner.\db2.$lt$../design/debounce.sv:45$17: $auto$alumacc.cc:485:replace_alu$1245
  creating $alu cell for $flatten\scanner.\db1.$lt$../design/debounce.sv:45$17: $auto$alumacc.cc:485:replace_alu$1256
  creating $alu cell for $flatten\scanner.\db0.$lt$../design/debounce.sv:45$17: $auto$alumacc.cc:485:replace_alu$1267
  creating $alu cell for $flatten\convA.$neg$../design/bcd_to_bin.sv:14$2: $auto$alumacc.cc:485:replace_alu$1278
  creating $alu cell for $flatten\convB.$neg$../design/bcd_to_bin.sv:14$2: $auto$alumacc.cc:485:replace_alu$1281
  creating $alu cell for $flatten\display.$add$../design/display_mux.sv:14$25: $auto$alumacc.cc:485:replace_alu$1284
  creating $alu cell for $flatten\display.$add$../design/display_mux.sv:16$26: $auto$alumacc.cc:485:replace_alu$1287
  creating $alu cell for $flatten\mul.$add$../design/booth_multiplier.sv:43$388: $auto$alumacc.cc:485:replace_alu$1290
  creating $alu cell for $flatten\mul.$sub$../design/booth_multiplier.sv:44$389: $auto$alumacc.cc:485:replace_alu$1293
  creating $alu cell for $flatten\mul.$sub$../design/booth_multiplier.sv:56$390: $auto$alumacc.cc:485:replace_alu$1296
  creating $alu cell for $flatten\scanner.$add$../design/keypad_scanner.sv:35$54: $auto$alumacc.cc:485:replace_alu$1299
  creating $alu cell for $flatten\scanner.$add$../design/keypad_scanner.sv:51$56: $auto$alumacc.cc:485:replace_alu$1302
  creating $alu cell for $flatten\scanner.\db0.$add$../design/debounce.sv:22$11: $auto$alumacc.cc:485:replace_alu$1305
  creating $alu cell for $flatten\scanner.\db0.$add$../design/debounce.sv:46$18: $auto$alumacc.cc:485:replace_alu$1308
  creating $alu cell for $flatten\scanner.\db1.$add$../design/debounce.sv:22$11: $auto$alumacc.cc:485:replace_alu$1311
  creating $alu cell for $flatten\scanner.\db1.$add$../design/debounce.sv:46$18: $auto$alumacc.cc:485:replace_alu$1314
  creating $alu cell for $flatten\scanner.\db2.$add$../design/debounce.sv:22$11: $auto$alumacc.cc:485:replace_alu$1317
  creating $alu cell for $flatten\scanner.\db2.$add$../design/debounce.sv:46$18: $auto$alumacc.cc:485:replace_alu$1320
  creating $alu cell for $flatten\scanner.\db3.$add$../design/debounce.sv:22$11: $auto$alumacc.cc:485:replace_alu$1323
  creating $alu cell for $flatten\scanner.\db3.$add$../design/debounce.sv:46$18: $auto$alumacc.cc:485:replace_alu$1326
  creating $alu cell for $neg$../design/top.sv:140$112: $auto$alumacc.cc:485:replace_alu$1329
  created 23 $alu and 0 $macc cells.

10.7.12. Executing SHARE pass (SAT-based resource sharing).

10.7.13. Executing OPT pass (performing simple optimizations).

10.7.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

10.7.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.7.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.13.6. Executing OPT_DFF pass (perform DFF optimizations).

10.7.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

10.7.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.13.9. Rerunning OPT passes. (Maybe there is more to do..)

10.7.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

10.7.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.7.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.7.13.13. Executing OPT_DFF pass (perform DFF optimizations).

10.7.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.7.13.16. Finished OPT passes. (There is nothing left to do.)

10.7.14. Executing MEMORY pass.

10.7.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

10.7.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

10.7.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

10.7.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

10.7.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397'[0] in module `\top': no output FF found.
Checking read port `$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393'[0] in module `\top': no output FF found.
Checking read port address `$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397'[0] in module `\top': no address FF found.
Checking read port address `$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393'[0] in module `\top': no address FF found.

10.7.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

10.7.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

10.7.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.7.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

10.7.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.8. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397
using FF mapping for memory top.$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393
<suppressed ~12 debug messages>

10.9. Executing TECHMAP pass (map to technology primitives).

10.9.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

10.9.2. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/brams_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

10.9.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

10.10. Executing OPT pass (performing simple optimizations).

10.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~38 debug messages>

10.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

10.10.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1136 ($dffe) from module top (D = $auto$wreduce.cc:455:run$1207 [15:0], Q = \scanner.counter, rval = 16'0000000000000000).
Adding SRST signal on $auto$ff.cc:266:slice$1125 ($dffe) from module top (D = $auto$wreduce.cc:455:run$1208 [5:0], Q = \scanner.db0.reg_sat, rval = 6'000000).
Adding SRST signal on $auto$ff.cc:266:slice$1111 ($dffe) from module top (D = $auto$wreduce.cc:455:run$1209 [5:0], Q = \scanner.db1.reg_sat, rval = 6'000000).
Adding SRST signal on $auto$ff.cc:266:slice$1097 ($dffe) from module top (D = $auto$wreduce.cc:455:run$1210 [5:0], Q = \scanner.db2.reg_sat, rval = 6'000000).
Adding SRST signal on $auto$ff.cc:266:slice$1083 ($dffe) from module top (D = $auto$wreduce.cc:455:run$1211 [5:0], Q = \scanner.db3.reg_sat, rval = 6'000000).

10.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 26 unused wires.
<suppressed ~13 debug messages>

10.10.5. Rerunning OPT passes. (Removed registers in this run.)

10.10.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.10.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.10.8. Executing OPT_DFF pass (perform DFF optimizations).

10.10.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.10.10. Finished fast OPT passes.

10.11. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397 in module \top:
  created 128 $dff cells and 0 static cells of width 12.
  read interface: 0 $dff and 127 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

10.12. Executing OPT pass (performing simple optimizations).

10.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~45 debug messages>

10.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

10.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][31]$1827:
      Old ports: A=12'000001100010, B=12'000001100011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$b$1685
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$b$1685 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$b$1685 [11:1] = 11'00000110001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][30]$1824:
      Old ports: A=12'000001100000, B=12'000001100001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$a$1684
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$a$1684 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$a$1684 [11:1] = 11'00000110000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][29]$1821:
      Old ports: A=12'000001011000, B=12'000001011001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$b$1682
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$b$1682 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$b$1682 [11:1] = 11'00000101100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][28]$1818:
      Old ports: A=12'000001010110, B=12'000001010111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$a$1681
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$a$1681 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$a$1681 [11:1] = 11'00000101011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][27]$1815:
      Old ports: A=12'000001010100, B=12'000001010101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$b$1679
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$b$1679 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$b$1679 [11:1] = 11'00000101010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][26]$1812:
      Old ports: A=12'000001010010, B=12'000001010011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$a$1678
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$a$1678 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$a$1678 [11:1] = 11'00000101001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][25]$1809:
      Old ports: A=12'000001010000, B=12'000001010001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$b$1676
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$b$1676 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$b$1676 [11:1] = 11'00000101000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][24]$1806:
      Old ports: A=12'000001001000, B=12'000001001001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$a$1675
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$a$1675 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$a$1675 [11:1] = 11'00000100100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][23]$1803:
      Old ports: A=12'000001000110, B=12'000001000111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$b$1673
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$b$1673 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$b$1673 [11:1] = 11'00000100011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][22]$1800:
      Old ports: A=12'000001000100, B=12'000001000101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$a$1672
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$a$1672 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$a$1672 [11:1] = 11'00000100010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][21]$1797:
      Old ports: A=12'000001000010, B=12'000001000011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$b$1670
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$b$1670 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$b$1670 [11:1] = 11'00000100001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][20]$1794:
      Old ports: A=12'000001000000, B=12'000001000001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$a$1669
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$a$1669 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$a$1669 [11:1] = 11'00000100000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][19]$1791:
      Old ports: A=12'000000111000, B=12'000000111001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$b$1667
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$b$1667 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$b$1667 [11:1] = 11'00000011100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][18]$1788:
      Old ports: A=12'000000110110, B=12'000000110111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$a$1666
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$a$1666 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$a$1666 [11:1] = 11'00000011011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][17]$1785:
      Old ports: A=12'000000110100, B=12'000000110101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$b$1664
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$b$1664 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$b$1664 [11:1] = 11'00000011010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][16]$1782:
      Old ports: A=12'000000110010, B=12'000000110011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$a$1663
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$a$1663 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$a$1663 [11:1] = 11'00000011001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][15]$1779:
      Old ports: A=12'000000110000, B=12'000000110001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$b$1661
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$b$1661 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$b$1661 [11:1] = 11'00000011000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][14]$1776:
      Old ports: A=12'000000101000, B=12'000000101001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$a$1660
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$a$1660 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$a$1660 [11:1] = 11'00000010100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][13]$1773:
      Old ports: A=12'000000100110, B=12'000000100111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$b$1658
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$b$1658 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$b$1658 [11:1] = 11'00000010011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][12]$1770:
      Old ports: A=12'000000100100, B=12'000000100101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$a$1657
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$a$1657 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$a$1657 [11:1] = 11'00000010010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][11]$1767:
      Old ports: A=12'000000100010, B=12'000000100011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$b$1655
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$b$1655 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$b$1655 [11:1] = 11'00000010001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][10]$1764:
      Old ports: A=12'000000100000, B=12'000000100001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$a$1654
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$a$1654 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$a$1654 [11:1] = 11'00000010000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][9]$1761:
      Old ports: A=12'000000011000, B=12'000000011001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$b$1652
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$b$1652 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$b$1652 [11:1] = 11'00000001100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][8]$1758:
      Old ports: A=12'000000010110, B=12'000000010111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$a$1651
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$a$1651 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$a$1651 [11:1] = 11'00000001011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][7]$1755:
      Old ports: A=12'000000010100, B=12'000000010101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$b$1649
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$b$1649 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$b$1649 [11:1] = 11'00000001010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][6]$1752:
      Old ports: A=12'000000010010, B=12'000000010011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$a$1648
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$a$1648 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$a$1648 [11:1] = 11'00000001001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][5]$1749:
      Old ports: A=12'000000010000, B=12'000000010001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$b$1646
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$b$1646 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$b$1646 [11:1] = 11'00000001000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][4]$1746:
      Old ports: A=12'000000001000, B=12'000000001001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$a$1645
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$a$1645 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$a$1645 [11:1] = 11'00000000100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][3]$1743:
      Old ports: A=12'000000000110, B=12'000000000111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$b$1643
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$b$1643 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$b$1643 [11:1] = 11'00000000011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][2]$1740:
      Old ports: A=12'000000000100, B=12'000000000101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$a$1642
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$a$1642 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$a$1642 [11:1] = 11'00000000010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][1]$1737:
      Old ports: A=12'000000000010, B=12'000000000011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$b$1640
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$b$1640 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$b$1640 [11:1] = 11'00000000001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][0]$1734:
      Old ports: A=12'000000000000, B=12'000000000001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [11:1] = 11'00000000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][32]$1830:
      Old ports: A=12'000001100100, B=12'000001100101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$a$1687
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$a$1687 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$a$1687 [11:1] = 11'00000110010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][40]$1854:
      Old ports: A=12'000010000000, B=12'000010000001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$a$1699
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$a$1699 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$a$1699 [11:1] = 11'00001000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][38]$1848:
      Old ports: A=12'000001110110, B=12'000001110111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$a$1696
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$a$1696 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$a$1696 [11:1] = 11'00000111011
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][5]$1962:
      Old ports: A=7'0111111, B=7'1111111, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$b$1943
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$b$1943 [6]
      New connections: $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$b$1943 [5:0] = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][3]$1956:
      Old ports: A=7'0000010, B=7'1111000, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [1] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [6:4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [2] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [0] } = { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][4]$1959:
      Old ports: A=7'0000000, B=7'0010000, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942 [4]
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942 [6:5] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942 [3:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][1]$1950:
      Old ports: A=7'0100100, B=7'0110000, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [2] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [6:5] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [1:0] } = 5'01000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][39]$1851:
      Old ports: A=12'000001111000, B=12'000001111001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$b$1697
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$b$1697 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$b$1697 [11:1] = 11'00000111100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][37]$1845:
      Old ports: A=12'000001110100, B=12'000001110101, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$b$1694
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$b$1694 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$b$1694 [11:1] = 11'00000111010
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][2]$1953:
      Old ports: A=7'0011001, B=7'0010010, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939 [1:0]
      New connections: $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939 [6:2] = { 3'001 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][3][0]$1947:
      Old ports: A=7'1000000, B=7'1111001, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0]
      New connections: $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [6:1] = { 1'1 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][33]$1833:
      Old ports: A=12'000001100110, B=12'000001100111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$b$1688
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$b$1688 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$b$1688 [11:1] = 11'00000110011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][36]$1842:
      Old ports: A=12'000001110010, B=12'000001110011, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$a$1693
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$a$1693 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$a$1693 [11:1] = 11'00000111001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][35]$1839:
      Old ports: A=12'000001110000, B=12'000001110001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$b$1691
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$b$1691 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$b$1691 [11:1] = 11'00000111000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][6][34]$1836:
      Old ports: A=12'000001101000, B=12'000001101001, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$a$1690
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$a$1690 [0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$a$1690 [11:1] = 11'00000110100
    Consolidated identical input bits for $pmux cell $flatten\scanner.$procmux$576:
      Old ports: A=4'1110, B=12'110111110000, Y=$flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$76
      New ports: A=3'110, B=9'101111000, Y=$flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$76 [2:0]
      New connections: $flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$76 [3] = $flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:61$32.$result[3:0]$76 [2]
    Consolidated identical input bits for $pmux cell $flatten\scanner.$procmux$624:
      Old ports: A=4'0001, B=12'101000110010, Y=$flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$73
      New ports: A=3'001, B=9'110011010, Y={ $flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$73 [3] $flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$73 [1:0] }
      New connections: $flatten\scanner.$4\decode_key$func$../design/keypad_scanner.sv:58$29.$result[3:0]$73 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\scanner.$procmux$857:
      Old ports: A=2'00, B=2'11, Y=$flatten\scanner.$procmux$857_Y
      New ports: A=1'0, B=1'1, Y=$flatten\scanner.$procmux$857_Y [0]
      New connections: $flatten\scanner.$procmux$857_Y [1] = $flatten\scanner.$procmux$857_Y [0]
    Consolidated identical input bits for $mux cell $procmux$447:
      Old ports: A={ 1'1 \B_bcd }, B={ 1'0 \B_bcd }, Y=$3\display_data[15:0]
      New ports: A=1'1, B=1'0, Y=$3\display_data[15:0] [4]
      New connections: $3\display_data[15:0] [3:0] = \B_bcd
    Consolidated identical input bits for $mux cell $procmux$455:
      Old ports: A={ 1'1 \A_bcd }, B={ 1'0 \A_bcd }, Y=$2\display_data[15:0]
      New ports: A=1'1, B=1'0, Y=$2\display_data[15:0] [4]
      New connections: $2\display_data[15:0] [3:0] = \A_bcd
    Consolidated identical input bits for $pmux cell $procmux$460:
      Old ports: A=15'111111111111111, B={ 10'0111011101 $2\display_data[15:0] 10'0111011101 $3\display_data[15:0] 4'1111 \signo \result_bcd [7:0] }, Y=\display_data
      New ports: A=12'111111111111, B={ 7'0011101 $2\display_data[15:0] 7'0011101 $3\display_data[15:0] 1'1 \signo \result_bcd [7:0] }, Y={ \display_data [14] \display_data [10:0] }
      New connections: \display_data [13:11] = 3'111
    New ctrl vector for $pmux cell $procmux$470: $procmux$477_CMP
    Consolidated identical input bits for $mux cell $ternary$../design/top.sv:149$115:
      Old ports: A=3'010, B=3'111, Y=\signo
      New ports: A=1'0, B=1'1, Y=\signo [0]
      New connections: \signo [2:1] = { \signo [0] 1'1 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$1941:
      Old ports: A=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942, B=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$b$1943, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933
      New ports: A={ 1'0 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$a$1942 [4] 1'0 }, B={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][2]$b$1943 [6] 2'11 }, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [6] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [5] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [3:1] } = { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$1935:
      Old ports: A=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936, B=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930
      New ports: A={ 1'1 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] 1'0 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$a$1936 [0] }, B={ 2'01 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][0]$b$1937 [2] 1'0 }, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [6:4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [2] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [0] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [1] } = { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$a$1930 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$1938:
      Old ports: A=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939, B=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931
      New ports: A={ 2'01 $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$a$1939 [1:0] }, B={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][2][1]$b$1940 [1] 1'0 }, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931 [5:3] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931 [1:0] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931 [6] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931 [2] } = { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][0]$b$1931 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$1698:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$a$1699, B=12'111111111111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][20]$a$1699 [0] }, B=2'11, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [11:2] = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$1695:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$a$1696, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$b$1697, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$a$1696 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][19]$b$1697 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [1:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [11:4] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [2] } = { 8'00000111 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$1692:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$a$1693, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$b$1694, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$a$1618
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$a$1693 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][18]$b$1694 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$a$1618 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$a$1618 [11:3] = 9'000001110
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$1689:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$a$1690, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$b$1691, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$a$1690 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][17]$b$1691 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [11:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [2:1] } = 9'000001100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$1686:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$a$1687, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$b$1688, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$a$1615
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$a$1687 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$b$1688 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$a$1615 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$a$1615 [11:2] = 10'0000011001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$1683:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$a$1684, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$b$1685, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$b$1613
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$a$1684 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][15]$b$1685 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$b$1613 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$b$1613 [11:2] = 10'0000011000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$1680:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$a$1681, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$b$1682, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$a$1681 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$b$1682 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [1:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [11:4] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [2] } = { 8'00000101 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$1677:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$a$1678, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$b$1679, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$b$1610
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$a$1678 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][13]$b$1679 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$b$1610 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$b$1610 [11:3] = 9'000001010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$1674:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$a$1675, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$b$1676, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$a$1675 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][12]$b$1676 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [11:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [2:1] } = 9'000001000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$1671:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$a$1672, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$b$1673, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$b$1607
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$a$1672 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][11]$b$1673 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$b$1607 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$b$1607 [11:2] = 10'0000010001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$1668:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$a$1669, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$b$1670, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$a$1606
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$a$1669 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][10]$b$1670 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$a$1606 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$a$1606 [11:2] = 10'0000010000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$1665:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$a$1666, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$b$1667, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$a$1666 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][9]$b$1667 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [1:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [11:4] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [2] } = { 8'00000011 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$1662:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$a$1663, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$b$1664, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$a$1603
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$a$1663 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][8]$b$1664 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$a$1603 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$a$1603 [11:3] = 9'000000110
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$1659:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$a$1660, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$b$1661, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$a$1660 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][7]$b$1661 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [11:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [2:1] } = 9'000000100
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$1656:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$a$1657, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$b$1658, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$a$1600
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$a$1657 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][6]$b$1658 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$a$1600 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$a$1600 [11:2] = 10'0000001001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$1653:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$a$1654, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$b$1655, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$b$1598
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$a$1654 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][5]$b$1655 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$b$1598 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$b$1598 [11:2] = 10'0000001000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$1650:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$a$1651, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$b$1652, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$a$1651 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][4]$b$1652 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [1:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [11:4] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [2] } = { 8'00000001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$1647:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$a$1648, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$b$1649, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$b$1595
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$a$1648 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][3]$b$1649 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$b$1595 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$b$1595 [11:3] = 9'000000010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$1644:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$a$1645, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$b$1646, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$a$1645 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][2]$b$1646 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [11:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [2:1] } = 9'000000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$1641:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$a$1642, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$b$1643, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$b$1592
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$a$1642 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][1]$b$1643 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$b$1592 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$b$1592 [11:2] = 10'0000000001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$1638:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$b$1640, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$b$1640 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [11:2] = 10'0000000000
    Consolidated identical input bits for $pmux cell $procmux$460:
      Old ports: A=12'111111111111, B={ 7'0011101 $2\display_data[15:0] 7'0011101 $3\display_data[15:0] 1'1 \signo \result_bcd [7:0] }, Y={ \display_data [14] \display_data [10:0] }
      New ports: A=11'11111111111, B={ 6'001101 $2\display_data[15:0] [4] \A_bcd 6'001101 $3\display_data[15:0] [4] \B_bcd 1'1 \signo [0] \signo [0] \result_bcd [7:0] }, Y={ \display_data [14] \display_data [10] \display_data [8:0] }
      New connections: \display_data [9] = 1'1
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$1932:
      Old ports: A=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933, B=7'1111111, Y=$memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928
      New ports: A={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [6] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][1][1]$a$1933 [0] }, B=3'111, Y={ $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [6] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [4] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [0] }
      New connections: { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [5] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [3:1] } = { $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [0] $memory$flatten\display.\conv.$auto$proc_rom.cc:150:do_switch$393$rdmux[0][0][0]$b$1928 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$1620:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621, B=12'111111111111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][10]$a$1621 [1:0], B=2'11, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [11:2] = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$1617:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$a$1618, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$b$1580
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$a$1618 [2:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$b$1619 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$b$1580 [3:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$b$1580 [11:4] = 8'00000111
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$1614:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$a$1615, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$a$1579
      New ports: A={ 3'001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$a$1615 [1:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$b$1616 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$a$1579 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$a$1579 [11:5] = 7'0000011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$1611:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$b$1613, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$b$1577
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$a$1612 [1:0] }, B={ 4'1000 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$b$1613 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$b$1577 [5:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$b$1577 [11:6] = 6'000001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$1608:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$b$1610, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$a$1576
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$a$1609 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$b$1610 [2:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$a$1576 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$a$1576 [11:5] = 7'0000010
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$1605:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$a$1606, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$b$1607, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$b$1574
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$a$1606 [1:0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$b$1607 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$b$1574 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$b$1574 [11:3] = 9'000001000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$1602:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$a$1603, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$a$1603 [2:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][4]$b$1604 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [11:4] = 8'00000011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$1599:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$a$1600, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571
      New ports: A={ 3'001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$a$1600 [1:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][3]$b$1601 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [11:5] = 7'0000001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$1596:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$b$1598, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$a$1597 [1:0] }, B={ 4'1000 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][2]$b$1598 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [11:6] = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$1593:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$b$1595, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$b$1595 [2:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [11:5] = 7'0000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$1590:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$b$1592, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$b$1592 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [11:3] = 9'000000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$1581:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582, B=12'111111111111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][5]$a$1582 [1:0], B=2'11, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [11:2] = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$1578:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$a$1579, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$b$1580, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$a$1579 [4:0], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$b$1580 [3:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [11:5] = 7'0000011
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$1575:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$a$1576, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$b$1577, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$a$1576 [4:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$b$1577 [5:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [11:6] = 6'000001
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$1572:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$b$1574, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:0] }, B={ 3'100 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$b$1574 [2:0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [4:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [11:7] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [5] } = { 5'00000 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [4] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$1569:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:0], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [11:6] = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$1566:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555
      New ports: A={ 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [11:5] = 7'0000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$1560:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552
      New ports: A={ 3'001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [4:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$b$1562 [1:0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [8:7] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [5:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [11:9] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [6] } = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [5] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$1557:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [4] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [4:0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [11:7] = 5'00000
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$1554:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [11:6] = 6'000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$1551:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552, B=12'111111111111, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [8:7] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][1]$a$1552 [5:0] }, B=8'11111111, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [8:7] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [5:0] }
      New connections: { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [11:9] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [6] } = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [8] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [5] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$1548:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [6:0]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [11:7] = 5'00000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$1545:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547, Y={ \bcd_converter.bcd_out [11:8] \result_bcd [7:0] }
      New ports: A={ 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [6:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [8:7] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$b$1547 [5:0] }, Y={ \bcd_converter.bcd_out [8] \result_bcd [7:0] }
      New connections: \bcd_converter.bcd_out [11:9] = { \bcd_converter.bcd_out [8] \bcd_converter.bcd_out [8] \bcd_converter.bcd_out [8] }
  Optimizing cells in module \top.
Performed a total of 104 changes.

10.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~201 debug messages>
Removed a total of 67 cells.

10.12.6. Executing OPT_DFF pass (perform DFF optimizations).

10.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 256 unused wires.
<suppressed ~1 debug messages>

10.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.12.9. Rerunning OPT passes. (Maybe there is more to do..)

10.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

10.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][5]$1605:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2:0]
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [1:0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][6]$1608:
      Old ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:0]
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] 2'00 }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][9]$1617:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:0]
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:2]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [1:0] = { $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][14]$1680:
      Old ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0] }, B={ 2'10 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }
      New ports: A=2'01, B=2'10, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][16]$1686:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0]
      New ports: A=1'0, B=1'1, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$1566:
      Old ports: A={ 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:0]
      New ports: A={ 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:1], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$1572:
      Old ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:0] }, B={ 3'100 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2:0] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [3:0] }
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:2] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] }, B={ 3'100 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$a$1567 [2] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1] }, Y={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [3:1] }
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][7]$1611:
      Old ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, B={ 4'1000 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:0]
      New ports: A={ 2'01 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] }, B={ 4'1000 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][8]$1614:
      Old ports: A={ 3'001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1:0] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] 2'00 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:0]
      New ports: A={ 3'001 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][0]$a$1591 [1] }, B={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [4:3] 2'00 }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$1569:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:0], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:0]
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:1], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:1] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][3]$1575:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:0]
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][0]$b$1568 [4:1] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$a$1570 [5:1], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][4]$1578:
      Old ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:0], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [4:0]
      New ports: A=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][1]$b$1571 [4:1], B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][3][2]$a$1573 [3:2] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][4][1]$a$1594 [3] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [4:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][2]$a$1561 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$1554:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:0]
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$a$1555 [4:1] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][0]$b$1556 [5:1], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$1557:
      Old ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [3:0] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:0] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:0]
      New ports: A={ $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [6:5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [5] $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$a$1558 [3:1] }, B={ 1'1 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][2][1]$b$1559 [5:1] }, Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$1548:
      Old ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:0] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:0], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [6:0]
      New ports: A={ 1'0 $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$a$1549 [5:1] }, B=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][1][0]$b$1550 [6:1], Y=$memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [6:1]
      New connections: $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][0][0]$a$1546 [0] = $memory$flatten\bcd_converter.$auto$proc_rom.cc:150:do_switch$397$rdmux[0][5][0]$a$1639 [0]
  Optimizing cells in module \top.
Performed a total of 15 changes.

10.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.12.13. Executing OPT_DFF pass (perform DFF optimizations).

10.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

10.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.12.16. Rerunning OPT passes. (Maybe there is more to do..)

10.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

10.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

10.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

10.12.20. Executing OPT_DFF pass (perform DFF optimizations).

10.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

10.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.12.23. Finished OPT passes. (There is nothing left to do.)

10.13. Executing TECHMAP pass (map to technology primitives).

10.13.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/techmap.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.13.2. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/arith_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gw1n_alu'.
Successfully finished Verilog frontend.

10.13.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$610911f8769324f781128d641f7fe2120143c328\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$92cf01bf728df7e0842e2c2f058ab4e418831778\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_gw1n_alu for cells of type $alu.
Using template $paramod$3ace65afedd5f6a6849996376b6c02262a5f23eb\_80_gw1n_alu for cells of type $alu.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_gw1n_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_gw1n_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_gw1n_alu for cells of type $alu.
Using template $paramod$acb50aac1033d58dd99234b0e18364ce3b729ad2\_80_gw1n_alu for cells of type $alu.
Using template $paramod$18182f1e6654f3565ccaca8ae55e911ad72397ee\_80_gw1n_alu for cells of type $alu.
Using template $paramod$c703443eb15ff955db884f8bb126e3c9304e2f72\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~1312 debug messages>

10.14. Executing OPT pass (performing simple optimizations).

10.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1114 debug messages>

10.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~399 debug messages>
Removed a total of 133 cells.

10.14.3. Executing OPT_DFF pass (perform DFF optimizations).

10.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 29 unused cells and 1283 unused wires.
<suppressed ~30 debug messages>

10.14.5. Finished fast OPT passes.

10.15. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port top.an using OBUF.
Mapping port top.clk using IBUF.
Mapping port top.columnas using OBUF.
Mapping port top.filas using IBUF.
Mapping port top.rst using IBUF.
Mapping port top.seg using OBUF.

10.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

10.17. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

10.18. Executing TECHMAP pass (map to technology primitives).

10.18.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.18.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~288 debug messages>

10.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

10.20. Executing SIMPLEMAP pass (map simple cells to gate primitives).

10.21. Executing ABC pass (technology mapping using ABC).

10.21.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 851 gates and 1132 wires to a netlist network with 279 inputs and 204 outputs.

10.21.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.21.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      314
ABC RESULTS:        internal signals:      649
ABC RESULTS:           input signals:      279
ABC RESULTS:          output signals:      204
Removing temp directory.
Removed 0 unused cells and 2327 unused wires.

10.22. Executing TECHMAP pass (map to technology primitives).

10.22.1. Executing Verilog-2005 frontend: c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `c:\Users\Abner\DOWNLO~1\OSS-CA~1\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

10.22.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$53ec9609a83a74ff7b7c3006017d3870025d1376\$lut for cells of type $lut.
Using template $paramod$1e5747084e4d49b2dc33c5720162aab3f777fe01\$lut for cells of type $lut.
Using template $paramod$fa0fa340b82e712a5c788607e4f8d515a4f560e0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011101 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$88d5249132faa1c87ad49574fc35723cc0f46cf9\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$c6364c1c44c01bd533fa2efe3a700455891e44b1\$lut for cells of type $lut.
Using template $paramod$254e5cf2f57887c6a7d89d9b7ca0db1c20d33985\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$42902d09252424e308d0e7396e903fb2a8d9a202\$lut for cells of type $lut.
Using template $paramod$b7afbe7401160550051e0cf2c7225827046e49be\$lut for cells of type $lut.
Using template $paramod$b2b31ee6e59365653c5e59a12ceff86e7153a1fa\$lut for cells of type $lut.
Using template $paramod$ff315d5084ed3c80e34901fe05add0db5feb0b93\$lut for cells of type $lut.
Using template $paramod$3d746ea3629e1a5556ee0493e1b969ed48b327cf\$lut for cells of type $lut.
Using template $paramod$c8e2346553a238d2b6a22a71198ef51cf39d51cb\$lut for cells of type $lut.
Using template $paramod$1c0cd07e90efd67c09a7137df2cc631eef890e1f\$lut for cells of type $lut.
Using template $paramod$b9cb349931ddc835862d4a05abcc3709af77aa17\$lut for cells of type $lut.
Using template $paramod$23716aa09ed3bf61ffdd7599ca5941804cdab3ca\$lut for cells of type $lut.
Using template $paramod$192f10f4526cb0a173404f2e80627b7ae5cf8200\$lut for cells of type $lut.
Using template $paramod$9bb605c35cd1c732ceb4c96c05ba83d26fc0c327\$lut for cells of type $lut.
Using template $paramod$300e5a3bccd144e67cda2becf89c63f21c825435\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$542319d854226204ae1743acdebd4db7c015c415\$lut for cells of type $lut.
Using template $paramod$0efd7f1e6b2bb3b65f77bca8ff9bffca71fca466\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$478e33feeac3aa53ff57d491aada044b8aedceae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101100 for cells of type $lut.
Using template $paramod$bd3b0c017c4e1e0fc1bb96628ef563ac7e728f68\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$251994398653c4cf8de320f1e306e535d5d2d624\$lut for cells of type $lut.
Using template $paramod$700c49f204f6a6b16131b0fcbc945b0f39bffccb\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$0ac88c93700d41e2713306f9e255ca0d094873d4\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$7374e5c1ee27386fe7c5919a0c1cf5d2357a135d\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$59de045429641615f9fe556a2af28d0739e5972e\$lut for cells of type $lut.
Using template $paramod$388dbf93bee91918d385c696f1b8d4515b94b317\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$6a1356ec93ceb6fd67ef4cb59e52c7878da23071\$lut for cells of type $lut.
Using template $paramod$ee70100fbf8af92cdbee94a290a3dc7260085094\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$e6bdbc3266d8a036b5a34f7676e19ff25063f9d0\$lut for cells of type $lut.
Using template $paramod$487a182831ce9f37f57a96c4840b30f3e62c80fc\$lut for cells of type $lut.
Using template $paramod$e05bddbcf3b53ae9b9c7720b7da05cb923cbd352\$lut for cells of type $lut.
Using template $paramod$1e05b31d9ef5a73a22c0e9c3140c467da6bb9561\$lut for cells of type $lut.
Using template $paramod$2ed24b91dcfa8490f0509beac039251f3420996c\$lut for cells of type $lut.
Using template $paramod$e71c7dcabe6c0e90cf24ceb7f2a9a121f0b818bb\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$5a3320f9df77a9c484815fcbe8b180a2e97c559a\$lut for cells of type $lut.
Using template $paramod$4bc0788b83e1448c49851c75aebc4bc0eeabee44\$lut for cells of type $lut.
Using template $paramod$552c54a44f22c5fb2e95c58915635f2a2f213caa\$lut for cells of type $lut.
Using template $paramod$adb04a0d373907aee8e1212df237780deedd8391\$lut for cells of type $lut.
Using template $paramod$bb741189a8fd71429d1ed4675c85500c0acacdfa\$lut for cells of type $lut.
Using template $paramod$7f3617f4b24dd2e899782b88617aab9578e70e0f\$lut for cells of type $lut.
Using template $paramod$ecf3a2ae95ca52f21141706477298609dfe5b5d5\$lut for cells of type $lut.
Using template $paramod$149f41c146f3d7df72799e86c14a5edee10b80ab\$lut for cells of type $lut.
Using template $paramod$744fb5a74e785b962ad37165c49da4cf7c0189c3\$lut for cells of type $lut.
Using template $paramod$e4e96a5dece796d779288739da28d0f9a19e7c8a\$lut for cells of type $lut.
Using template $paramod$ecc8f136f6aed415e047a0ef706f98ca5d1ce334\$lut for cells of type $lut.
Using template $paramod$e1195f46b8c9e458b340889cc29aaabb1a6e8367\$lut for cells of type $lut.
Using template $paramod$9e2adb87db7c9f9ce9864f068aa1b7762838d0eb\$lut for cells of type $lut.
Using template $paramod$23178c92aca276e74b086e1382e311973008f12e\$lut for cells of type $lut.
Using template $paramod$c0670f2aab73eea2cd5c91d3b03ce85be7de1148\$lut for cells of type $lut.
Using template $paramod$5df13ea62c9ceef7a34811fa722c37e1e6760d36\$lut for cells of type $lut.
Using template $paramod$82a48e5f5771a531ca9edba4cc6af5165f5035d5\$lut for cells of type $lut.
Using template $paramod$1cac386dc250b88b4ab178b2d4abe784a8b0f3bb\$lut for cells of type $lut.
Using template $paramod$f85144e9e6ea7e4f4a7a7d3497197aafb52ef9a5\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$1a408b9e2a9a8f6c5b7c63cfeae196f4f8ac06b6\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$a8cb9dc6eccb911035b7155b3fa8bdcdb987b386\$lut for cells of type $lut.
Using template $paramod$0648a9971338eb5e0ed691e2a77f7ac35ca33a48\$lut for cells of type $lut.
Using template $paramod$15e465e947aa87c07d3af9c64951debe4d4f6075\$lut for cells of type $lut.
Using template $paramod$1cbd4a77a0ff84136d700f9ba1f7026a0b4b36e9\$lut for cells of type $lut.
Using template $paramod$282e798aa7ccca035c58e9184aca329257cf5473\$lut for cells of type $lut.
Using template $paramod$70eede88600cc94329ae6aa920c0fbb2c8ecd516\$lut for cells of type $lut.
Using template $paramod$d3bf9d4db6b911ea95e136f947af1c43317120d3\$lut for cells of type $lut.
Using template $paramod$f3dd7741bf8bb1d75890d8529b0817fa75d9f514\$lut for cells of type $lut.
Using template $paramod$0b1a7ad5e43a62420b7935d82a2aeb25ce9026f2\$lut for cells of type $lut.
Using template $paramod$6b3292af07c0804a0dbd7a3651746f683abb8875\$lut for cells of type $lut.
Using template $paramod$952dd9cab8047b3dbccf0efe4cb0d3cb4f81bc11\$lut for cells of type $lut.
Using template $paramod$601dd85eea62adf5002231d4a2e12cbce10aeb6d\$lut for cells of type $lut.
Using template $paramod$7acb39eec0189e584b66719fdb341b9f5cf9a0b2\$lut for cells of type $lut.
Using template $paramod$f63322b393ef049e5a0b618c88c3980ab7f592da\$lut for cells of type $lut.
Using template $paramod$9aeca452bcb8ba1931f8b8725c0cfe4cc89f8fd0\$lut for cells of type $lut.
Using template $paramod$dadff75c617cf87bb5b8cfe47ca6c69fb6925370\$lut for cells of type $lut.
Using template $paramod$d9a7e6907de2f3ad596d095366ad0d7d9ef5a18f\$lut for cells of type $lut.
Using template $paramod$fbae56b54c46a3a6e7ab718626d0c7496cf9e940\$lut for cells of type $lut.
Using template $paramod$e416543d00bc16cb3423df27c3ce680ac207413e\$lut for cells of type $lut.
Using template $paramod$cf1b1291504a5d475ce2767bcb9fef5967350b7e\$lut for cells of type $lut.
Using template $paramod$3aac200b1ee408e2209f36da43590d012f3b4c43\$lut for cells of type $lut.
Using template $paramod$bc0a7d4fc8c3a09c24964858095d3260e6f0b22b\$lut for cells of type $lut.
Using template $paramod$43e2ef22d89b66b5fa2ad4caee034dee5cc41fcf\$lut for cells of type $lut.
Using template $paramod$fde7f02af69a16377f8fe5561ac01e865c85ab22\$lut for cells of type $lut.
Using template $paramod$3a32a7587b9f95b908af04fb9b75cd3eae00b58e\$lut for cells of type $lut.
Using template $paramod$c7154166a0a603cc8aff41c5fac6c7c569904e95\$lut for cells of type $lut.
Using template $paramod$f9da5880d5f74882cb4f039c6b8c8504fc7d9713\$lut for cells of type $lut.
Using template $paramod$05b46a694d4718b797aacba9c9645dcaa6aa3442\$lut for cells of type $lut.
Using template $paramod$1b0b9e599614b8748fd7e5d0540215710ebdeb1e\$lut for cells of type $lut.
Using template $paramod$6af023d04780a6b54e8dd53dc6126bcf1a45e79b\$lut for cells of type $lut.
Using template $paramod$a95aeb58822b83840ad0d33221e28b316b409b83\$lut for cells of type $lut.
Using template $paramod$9021db5d1f057baf157ef948e28bf74670018da2\$lut for cells of type $lut.
Using template $paramod$ef5c546f881258ba9a042f65fc97b8f8095892e1\$lut for cells of type $lut.
Using template $paramod$cc32a05866f608aca38637d6c7ba9e5d077e8484\$lut for cells of type $lut.
Using template $paramod$452a6869e85f719f86f8f3a7bf5b8f0bfff6cd3d\$lut for cells of type $lut.
Using template $paramod$a9269b8dab1a0d2cb7a6cb8eb14467893f47d66c\$lut for cells of type $lut.
Using template $paramod$f8bf7ce2cfc03a2fcdba016d95c65c16f5a9e768\$lut for cells of type $lut.
Using template $paramod$734cb5d7d83659ae4da13abb9e04fafa8dc19119\$lut for cells of type $lut.
Using template $paramod$2661aa2601af93e362041e04a59405a491f36855\$lut for cells of type $lut.
Using template $paramod$56bfb9c7bc4e9d036b2c8ade273bc395ad3f1805\$lut for cells of type $lut.
Using template $paramod$7a862e5950afbc5d88d2d7272ea5d2a1229013d9\$lut for cells of type $lut.
Using template $paramod$083d8add38d4ebe66263b000d75fb189e12eae2f\$lut for cells of type $lut.
Using template $paramod$38eb41627b73166bbe454e6a54f14d2c3bea9c81\$lut for cells of type $lut.
Using template $paramod$b592269b6944ecd9b361474b67a6192c427600f5\$lut for cells of type $lut.
Using template $paramod$becfa47620d5c38b7db7b429ec7c56bd6a8b81d9\$lut for cells of type $lut.
Using template $paramod$85868ac9072e18509c06d62dfc5410952aeab819\$lut for cells of type $lut.
Using template $paramod$bd9c5ccb4e8b571f1f7871ba52786ae0a4537314\$lut for cells of type $lut.
Using template $paramod$b30fb891b0f17289464c08aef06f67b8e2410a44\$lut for cells of type $lut.
Using template $paramod$40e7a989f52204e6a60088a025d5f5b9070c2cfc\$lut for cells of type $lut.
Using template $paramod$3129c64ac02f22952f34386bd50757aae06cd5a6\$lut for cells of type $lut.
Using template $paramod$8bd7995d67c09322929eb14db302d53fb108f84a\$lut for cells of type $lut.
Using template $paramod$1ec2b37b390128eff942245bdaffc234c0d268fb\$lut for cells of type $lut.
Using template $paramod$69f06ba6ef763a0239c71c9d239daeb9f16a762a\$lut for cells of type $lut.
Using template $paramod$fa9fa3225d9bc1f5dcd48213e5b75e03f117895a\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~2455 debug messages>

10.23. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5698.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5702.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5673.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5683.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5673.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5681.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5710.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5710.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5702.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5683.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5634.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5640.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5722.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5725.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5673.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5707.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5698.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5693.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5702.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5710.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5643.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5637.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5708.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5723.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5672.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5710.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5698.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5693.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5707.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5703.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5689.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5706.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5695.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5698.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5722.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5724.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5724.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5725.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5723.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5673.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$5565$auto$blifparse.cc:525:parse_blif$5706.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)

10.24. Executing SETUNDEF pass (replace undef values with defined constants).

10.25. Executing HILOMAP pass (mapping to constant drivers).
Removed 0 unused cells and 893 unused wires.

10.26. Executing AUTONAME pass.
Renamed 24530 objects in module top (75 iterations).
<suppressed ~1453 debug messages>

10.27. Executing HIERARCHY pass (managing design hierarchy).

10.27.1. Analyzing design hierarchy..
Top module:  \top

10.27.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

10.28. Printing statistics.

=== top ===

   Number of wires:                490
   Number of wire bits:           2049
   Number of public wires:         490
   Number of public wire bits:    2049
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1059
     ALU                           354
     DFF                             8
     DFFC                            8
     DFFCE                          35
     DFFE                           18
     DFFP                            2
     DFFR                           17
     DFFRE                         169
     DFFS                            4
     DFFSE                           4
     GND                             1
     IBUF                            6
     LUT1                          105
     LUT2                           58
     LUT3                           53
     LUT4                          119
     MUX2_LUT5                      53
     MUX2_LUT6                      20
     MUX2_LUT7                       9
     OBUF                           15
     VCC                             1

10.29. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10.30. Executing JSON backend.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 032c1dfa86
Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)
Time spent: 1% 24x opt_expr (0 sec), 1% 22x opt_clean (0 sec), ...
